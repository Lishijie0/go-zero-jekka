// Code generated by goctl. DO NOT EDIT.
// Source: third.proto

package thirdclient

import (
	"context"

	"jekka-api-go/app/third/cmd/rpc/third"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ProductDetail     = third.ProductDetail
	ProductDetailReq  = third.ProductDetailReq
	ProductDetailResp = third.ProductDetailResp
	ProductListReq    = third.ProductListReq
	ProductListResp   = third.ProductListResp

	Third interface {
		// 查询商品详情
		ProductDetail(ctx context.Context, in *ProductDetailReq, opts ...grpc.CallOption) (*ProductDetailResp, error)
		// 店铺商品列表
		ProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListResp, error)
	}

	defaultThird struct {
		cli zrpc.Client
	}
)

func NewThird(cli zrpc.Client) Third {
	return &defaultThird{
		cli: cli,
	}
}

// 查询商品详情
func (m *defaultThird) ProductDetail(ctx context.Context, in *ProductDetailReq, opts ...grpc.CallOption) (*ProductDetailResp, error) {
	client := third.NewThirdClient(m.cli.Conn())
	return client.ProductDetail(ctx, in, opts...)
}

// 店铺商品列表
func (m *defaultThird) ProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListResp, error) {
	client := third.NewThirdClient(m.cli.Conn())
	return client.ProductList(ctx, in, opts...)
}
