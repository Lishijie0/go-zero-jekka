// Code generated by goctl. DO NOT EDIT.
// Source: greet.proto

package greetclient

import (
	"context"

	"jekka-api-go/app/greet/cmd/rpc/greet"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SendMessage     = greet.SendMessage
	SendMessageReq  = greet.SendMessageReq
	SendMessageResp = greet.SendMessageResp

	Greet interface {
		SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageResp, error)
	}

	defaultGreet struct {
		cli zrpc.Client
	}
)

func NewGreet(cli zrpc.Client) Greet {
	return &defaultGreet{
		cli: cli,
	}
}

func (m *defaultGreet) SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageResp, error) {
	client := greet.NewGreetClient(m.cli.Conn())
	return client.SendMessage(ctx, in, opts...)
}
